
import logging
import openai
import telebot

# üîê –í–°–¢–ê–í–¨ –°–Æ–î–ê –°–í–û–ò –ö–õ–Æ–ß–ò
TELEGRAM_BOT_TOKEN = "–≤—Å—Ç–∞–≤—å_—Å—é–¥–∞_—Ç–≤–æ–π_—Ç–æ–∫–µ–Ω"
OPENAI_API_KEY = "–≤—Å—Ç–∞–≤—å_—Å—é–¥–∞_—Ç–≤–æ–π_OpenAI_API_–∫–ª—é—á"

openai.api_key = OPENAI_API_KEY
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "üëΩ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–µ.
–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚Äî –∏ –º—ã –ø–µ—Ä–µ—Å–æ–±–µ—Ä—ë–º —Ç–≤–æ–π –º–∏—Ä –≤–º–µ—Å—Ç–µ.")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫, –≥–æ–≤–æ—Ä–∏—à—å –ø—Ä–æ—Å—Ç–æ, –º—É–¥—Ä–æ –∏ –ø–æ –¥–µ–ª—É."},
                {"role": "user", "content": message.text}
            ]
        )
        reply = response['choices'][0]['message']['content']
        bot.reply_to(message, reply)
    except Exception as e:
        bot.reply_to(message, "‚ö†Ô∏è –û—à–∏–±–∫–∞: " + str(e))

bot.polling()
